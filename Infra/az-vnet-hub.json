{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "hubVnetName": {
            "type": "string",
            "metadata": {
                "description": "Hub VNET Name"
            }
            },
        "hubVnetAddressPrefix": {
            "type": "string",
            "metadata": {
                "description": "Hub VNET Address Prefix"
            }
        },
        "gatewaySubnetPrefix": {
            "type": "string",
            "metadata": {
                "description": "Gateway Subnet Prefix"
            }
        },
        "gatewayPublicIPName": {
            "type": "string",
            "metadata": {
                "description": "Gateway PublicIP Name"
            }
        },
        "gatewayName": {
            "type": "string",
            "metadata": {
                "description": "Gateway Name"
            }
        },
        "gatewaySku": {
            "type": "string",
            "metadata": {
                "description": "Gateway Sku"
            }
        },
        "vpnClientAddressPoolPrefix": {
            "type": "string",
            "metadata": {
                "description": "VPN Client Address Pool Prefix"
            }
        },
        "clientRootCertName": {
            "type": "string",
            "metadata": {
                "description": "Client Root CertName"
            }
        },
        "clientRootCertData": {
            "type": "string",
            "metadata": {
                "description": "Client Root Cert Data"
            }
        },
        "spoke1VnetName": {
            "type": "string",
            "metadata": {
                "description": "Spoke 1 VNET Name"
            }
        },
        "spoke1VnetAddressPrefix": {
            "type": "string",
            "metadata": {
                "description": "Spoke 1 VNET Address Prefix"
            }
        },
        "spoke1SubnetAddressPrefix": {
            "type": "string",
            "metadata": {
                "description": "Spoke 1 Subnet Address Prefix"
            }
        },
        "storageAccountName": {
            "type": "string",
            "metadata": {
                "description": "Storage Account Name"
            }
        },
        "spoke1Vm1Name": {
            "type": "string",
            "metadata": {
                "description": "Spoke 1 VM 1 Name"
            }
        },
        "vm1-spoke1-nic": {
            "type": "string",
            "metadata": {
                "description": "VM1-Spoke1-nic"
            }
        },
        "spoke2VnetName": {
            "type": "string",
            "metadata": {
                "description": "Spoke 2 VNET Name"
            }
        },
        "spoke2VnetAddressPrefix": {
            "type": "string",
            "metadata": {
                "description": "Spoke 2 VNET Address Prefix"
            }
        },
        "spoke2SubnetAddressPrefix": {
            "type": "string",
            "metadata": {
                "description": "Spoke 2 Subnet Address Prefix"
            }
        },
        "vm1-spoke2-nic": {
            "type": "string",
            "metadata": {
                "description": "VM1-Spoke2-nic"
            }
        },
        "spoke2Vm1Name": {
            "type": "string",
            "metadata": {
                "description": "Spoke 2 VM 1 Name"
            }
        },
        "vwanName": {
            "type": "string",
            "metadata": {
                "description": "vwan Name"
            }
        },
        "vWanHubName": {
            "type": "string",
            "metadata": {
                "description": "vWAN Hub Name"
            }
        },
        "vwanHubAddressPrefix": {
            "type": "string",
            "metadata": {
                "description": "vWAN Hub Address Prefix"
            }
        },
        "vwanP2SVpnGatewayName": {
            "type": "string",
            "metadata": {
                "description": "vWAN P2S VPN Gateway Name"
            }
        },
        "spoke3VnetName": {
            "type": "string",
            "metadata": {
                "description": "Spoke 3 VNET Name"
            }
        },
        "spoke3VnetAddressPrefix": {
            "type": "string",
            "metadata": {
                "description": "Spoke 3 VNET Address Prefix"
            }
        },
        "spoke3SubnetAddressPrefix": {
            "type": "string",
            "metadata": {
                "description": "Spoke 3 Subnet Address Prefix"
            }
        },
        "vm1-spoke3-nic": {
            "type": "string",
            "metadata": {
                "description": "VM1-Spoke3-nic"
            }
        },
        "spoke3Vm1Name": {
            "type": "string",
            "metadata": {
                "description": "Spoke 3 VM 1 Name"
            }
        },
        "spoke4VnetName": {
            "type": "string",
            "metadata": {
                "description": "Spoke 4 VNET Name"
            }
        },
        "spoke4VnetAddressPrefix": {
            "type": "string",
            "metadata": {
                "description": "Spoke 4 VNET Address Prefix"
            }
        },
        "spoke4SubnetAddressPrefix": {
            "type": "string",
            "metadata": {
                "description": "Spoke 4 Subnet Address Prefix"
            }
        },
        "vm1-spoke4-nic": {
            "type": "string",
            "metadata": {
                "description": "VM1-Spoke4-nic"
            }
        },
        "spoke4Vm1Name": {
            "type": "string",
            "metadata": {
                "description": "Spoke 4 VM 1 Name"
            }
        }
    },
    "functions": [],
    "variables": {
        "gatewaySubnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('hubVnetName'), 'GatewaySubnet')]",
        "SpokevNet1toHubvNetPeeringName": "[concat(parameters('spoke1VnetName'), '-', parameters('hubVnetName'))]",
        "HubvNettoSpokevNet1PeeringName": "[concat(parameters('hubVnetName'), '-', parameters('spoke1VnetName'))]",
        "SpokevNet2toHubvNetPeeringName": "[concat(parameters('spoke2VnetName'), '-', parameters('hubVnetName'))]",
        "HubvNettoSpokevNet2PeeringName": "[concat(parameters('hubVnetName'), '-', parameters('spoke2VnetName'))]",
        "Spoke1VM1SubnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets/', parameters('spoke1VnetName'), 'default')]",
        "Spoke2VM1SubnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets/', parameters('spoke2VnetName'), 'default')]",
        "Spoke3VM1SubnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets/', parameters('spoke3VnetName'), 'default')]",
        "Spoke4VM1SubnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets/', parameters('spoke4VnetName'), 'default')]"
    },
    "resources": [
        {
            "apiVersion": "2018-04-01",
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[parameters('hubVnetName')]",
            "location": "[resourceGroup().location]",
            "properties": {
            "addressSpace": {
                "addressPrefixes": [
                "[parameters('hubVnetAddressPrefix')]"
                ]
            },
            "subnets": [
                {
                    "name": "GatewaySubnet",
                    "properties": {
                        "addressPrefix": "[parameters('gatewaySubnetPrefix')]"
                            }
                        }
                ]
            },
            "resources": [
                {
                    "apiVersion": "2020-05-01",
                    "type": "virtualNetworkPeerings",
                    "name": "[variables('HubvNettoSpokevNet1PeeringName')]",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Network/virtualNetworks/', parameters('hubVnetName'))]",
                        "[resourceId('Microsoft.Network/virtualNetworks/', parameters('spoke1VnetName'))]"
                    ],
                    "comments": "Peering from Hub vNet to Spoke vNet 1",
                    "properties": {
                        "allowVirtualNetworkAccess": true,
                        "allowForwardedTraffic": false,
                        "allowGatewayTransit": true,
                        "useRemoteGateways": false,
                        "remoteVirtualNetwork": {
                            "id": "[resourceId('Microsoft.Network/virtualNetworks',parameters('spoke1VnetName'))]"
                        }
                    }
                },
                {
                    "apiVersion": "2020-05-01",
                    "type": "virtualNetworkPeerings",
                    "name": "[variables('HubvNettoSpokevNet2PeeringName')]",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Network/virtualNetworks/', parameters('hubVnetName'))]",
                        "[resourceId('Microsoft.Network/virtualNetworks/', parameters('spoke2VnetName'))]"
                    ],
                    "comments": "Peering from Hub vNet to Spoke vNet 2",
                    "properties": {
                        "allowVirtualNetworkAccess": true,
                        "allowForwardedTraffic": false,
                        "allowGatewayTransit": true,
                        "useRemoteGateways": false,
                        "remoteVirtualNetwork": {
                            "id": "[resourceId('Microsoft.Network/virtualNetworks',parameters('spoke2VnetName'))]"
                        }
                    } 
                }
            ]
        },
        {
            "apiVersion": "2018-04-01",
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[parameters('gatewayPublicIPName')]",
            "location": "[resourceGroup().location]",
            "properties": {
            "publicIPAllocationMethod": "Dynamic"
            }
        },
        {
            "apiVersion": "2018-04-01",
            "type": "Microsoft.Network/virtualNetworkGateways",
            "name": "[parameters('gatewayName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Network/publicIPAddresses/', parameters('gatewayPublicIPName'))]",
                "[concat('Microsoft.Network/virtualNetworks/', parameters('hubVnetName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                    "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                            "id": "[variables('gatewaySubnetRef')]"
                        },
                        "publicIPAddress": {
                            "id": "[resourceId('Microsoft.Network/publicIPAddresses',parameters('gatewayPublicIPName'))]"
                            }
                        },
                        "name": "vnetGatewayConfig"
                    }
                ],
                "sku": {
                    "name": "[parameters('gatewaySku')]",
                    "tier": "[parameters('gatewaySku')]"
                },
                "gatewayType": "Vpn",
                "vpnType": "RouteBased",
                "enableBgp": false,
                "vpnClientConfiguration": {
                    "vpnClientAddressPool": {
                        "addressPrefixes": [
                            "[parameters('vpnClientAddressPoolPrefix')]"
                        ]
                    },
                     "vpnClientRootCertificates": [
                        {
                            "name": "[parameters('clientRootCertName')]",
                            "properties": {
                                "PublicCertData": "[parameters('clientRootCertData')]"
                            }
                        }
                    ]
                }
            }
        },
        {
            "apiVersion": "2018-04-01",
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[parameters('spoke1VnetName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
               "[concat('Microsoft.Network/virtualNetworks/', parameters('hubVnetName'))]",
               "[resourceId('Microsoft.Network/networkSecurityGroups', 'spoke-vnet1-subnet-nsg')]"
            ],
            "properties": {
            "addressSpace": {
                "addressPrefixes": [
                "[parameters('spoke1VnetAddressPrefix')]"
                ]
            },
            "subnets": [
                {
                    "name": "default",
                    "properties": {
                        "addressPrefix": "[parameters('spoke1SubnetAddressPrefix')]",
                        "networkSecurityGroup": {
                            "id": "[resourceId('Microsoft.Network/networkSecurityGroups', 'spoke-vnet1-subnet-nsg')]"
                        }
                    }   
                }
                ]
            },
            "resources": [
                {
                    "apiVersion": "2020-05-01",
                    "type": "virtualNetworkPeerings",
                    "name": "[variables('SpokevNet1toHubvNetPeeringName')]",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Network/virtualNetworks/', parameters('hubVnetName'))]",
                        "[resourceId('Microsoft.Network/virtualNetworks/', parameters('spoke1VnetName'))]"
                    ],
                    "comments": "Peering from Spoke vNet 1 to Hub vNet",
                    "properties": {
                        "allowVirtualNetworkAccess": true,
                        "allowForwardedTraffic": false,
                        "allowGatewayTransit": false,
                        "useRemoteGateways": true,
                        "remoteVirtualNetwork": {
                            "id": "[resourceId('Microsoft.Network/virtualNetworks',parameters('hubVnetName'))]"
                        }
                    }
                }
            ]
        },
        {
            
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2019-08-01",
            "name": "spoke-vnet1-subnet-nsg",
            "location": "[resourceGroup().location]",
            "properties": {
                "securityRules": [
                {
                    "name": "default-allow-3389",
                    "properties": {
                    "priority": 1000,
                    "access": "Allow",
                    "direction": "Inbound",
                    "destinationPortRange": "3389",
                    "protocol": "Tcp",
                    "sourceAddressPrefix": "*",
                    "sourcePortRange": "*",
                    "destinationAddressPrefix": "*"
                    }
                }
                ]
            }
        },
        {
            "apiVersion": "2015-06-15",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[parameters('vm1-spoke1-nic')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', parameters('spoke1VnetName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('Spoke1VM1SubnetRef')]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[parameters('storageAccountName')]",
            "apiVersion": "2019-06-01",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Standard_LRS"
            },
            "kind": "Storage",
            "properties": {}
        },
        {
            "apiVersion": "2017-03-30",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[parameters('spoke1Vm1Name')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Storage/storageAccounts/', parameters('storageAccountName'))]",
                "[concat('Microsoft.Network/networkInterfaces/', parameters('vm1-spoke1-nic'))]"
            ],
            "properties": {
                "hardwareProfile": {
                "vmSize": "Standard_A2_v2"
                },
            "osProfile": {
                "computerName": "[parameters('spoke1Vm1Name')]",
                "adminUsername": "spoke1vm1-uid",
                "adminPassword": "<???>"
            },
            "storageProfile": {
                "imageReference": {
                    "publisher": "MicrosoftWindowsServer",
                    "offer": "WindowsServer",
                    "sku": "2012-R2-Datacenter",
                    "version": "latest"
                },
                "osDisk": {
                    "name": "[concat(parameters('spoke1Vm1Name'),'_OSDisk')]", 
                    "caching": "ReadWrite",
                    "createOption": "FromImage"
                    }
            },
            "networkProfile": {
                "networkInterfaces": [
                        {
                        "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('vm1-spoke1-nic'))]"
                        }
                    ]
                }
            }
        },
        {
            
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2019-08-01",
            "name": "spoke-vnet2-subnet-nsg",
            "location": "[resourceGroup().location]",
            "properties": {
                "securityRules": [
                {
                    "name": "default-allow-3389",
                    "properties": {
                    "priority": 1000,
                    "access": "Allow",
                    "direction": "Inbound",
                    "destinationPortRange": "3389",
                    "protocol": "Tcp",
                    "sourceAddressPrefix": "*",
                    "sourcePortRange": "*",
                    "destinationAddressPrefix": "*"
                    }
                }
                ]
            }
        },
        {
            "apiVersion": "2020-05-01",
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[parameters('spoke2VnetName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
               "[concat('Microsoft.Network/virtualNetworks/', parameters('hubVnetName'))]",
               "[resourceId('Microsoft.Network/networkSecurityGroups', 'spoke-vnet2-subnet-nsg')]"
            ],
            "properties": {
            "addressSpace": {
                "addressPrefixes": [
                "[parameters('spoke2VnetAddressPrefix')]"
                ]
            },
            "subnets": [
                {
                    "name": "default",
                    "properties": {
                        "addressPrefix": "[parameters('spoke2SubnetAddressPrefix')]",
                        "networkSecurityGroup": {
                            "id": "[resourceId('Microsoft.Network/networkSecurityGroups', 'spoke-vnet2-subnet-nsg')]"
                        }
                    }   
                }
                ]
            },
            "resources": [
                {
                    "apiVersion": "2020-05-01",
                    "type": "virtualNetworkPeerings",
                    "name": "[variables('SpokevNet2toHubvNetPeeringName')]",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Network/virtualNetworks/', parameters('hubVnetName'))]",
                        "[resourceId('Microsoft.Network/virtualNetworks/', parameters('spoke2VnetName'))]"
                    ],
                    "comments": "Peering from Spoke vNet 2 to Hub vNet",
                    "properties": {
                        "allowVirtualNetworkAccess": true,
                        "allowForwardedTraffic": false,
                        "allowGatewayTransit": false,
                        "useRemoteGateways": true,
                        "remoteVirtualNetwork": {
                            "id": "[resourceId('Microsoft.Network/virtualNetworks',parameters('hubVnetName'))]"
                        }
                    }
                }
            ]
        },
        {
            "apiVersion": "2015-06-15",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[parameters('vm1-spoke2-nic')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', parameters('spoke2VnetName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('Spoke2VM1SubnetRef')]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2017-03-30",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[parameters('spoke2Vm1Name')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Storage/storageAccounts/', parameters('storageAccountName'))]",
                "[concat('Microsoft.Network/networkInterfaces/', parameters('vm1-spoke2-nic'))]"
            ],
            "properties": {
                "hardwareProfile": {
                "vmSize": "Standard_A2_v2"
                },
            "osProfile": {
                "computerName": "[parameters('spoke2Vm1Name')]",
                "adminUsername": "spoke2vm1-uid",
                "adminPassword": "<???>"
            },
            "storageProfile": {
                "imageReference": {
                    "publisher": "MicrosoftWindowsServer",
                    "offer": "WindowsServer",
                    "sku": "2012-R2-Datacenter",
                    "version": "latest"
                },
                "osDisk": {
                    "name": "[concat(parameters('spoke2Vm1Name'),'_OSDisk')]", 
                    "caching": "ReadWrite",
                    "createOption": "FromImage"
                    }
            },
            "networkProfile": {
                "networkInterfaces": [
                        {
                        "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('vm1-spoke2-nic'))]"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Network/virtualWans",
            "name": "[parameters('vwanName')]",
            "apiVersion": "2020-05-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "allowVnetToVnetTraffic": true,
                "type": "Standard"
            }
        },
        {
            "type": "Microsoft.Network/virtualHubs",
            "name": "[parameters('vWanHubName')]",
            "apiVersion": "2020-04-01",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualWans/', parameters('vwanName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('spoke3VnetName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('spoke4VnetName'))]"
            ],
            "properties": {
                "addressPrefix": "[parameters('vwanHubAddressPrefix')]",
                "virtualWan": {
                    "id": "[resourceId('Microsoft.Network/virtualWans',parameters('vwanName'))]"
                },
                 "p2SVpnGateway": {
                    "id": "[resourceId('Microsoft.Network/p2sVpnGateways', parameters('vwanP2SVpnGatewayName'))]"
                },
                "virtualNetworkConnections": [
                    {
                        "name": "vhub-to-spoke3",
                        "properties": {
                            "remoteVirtualNetwork": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('spoke3VnetName'))]"
                            },
                            "allowHubToRemoteVnetTransit": true,
                            "allowRemoteVnetToUseHubVnetGateways": true,
                            "enableInternetSecurity": true
                        }
                    },
                    {
                        "name": "vhub-to-spoke4",
                        "properties": {
                            "remoteVirtualNetwork": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('spoke4VnetName'))]"
                            },
                            "allowHubToRemoteVnetTransit": true,
                            "allowRemoteVnetToUseHubVnetGateways": true,
                            "enableInternetSecurity": true
                        }
                    }
                ],
                "sku": "Standard"
            }
        },
        {
            "type": "Microsoft.Network/vpnServerConfigurations",
            "apiVersion": "2020-05-01",
            "name": "vwan-p2s-vpn-config",
            "location": "[resourceGroup().location]",
            "properties": {
                "vpnProtocols": [
                    "IkeV2"
                ],
                "vpnAuthenticationTypes": [
                    "Certificate"
                ],
                "vpnClientRootCertificates": [
                    {
                        "name": "[parameters('clientRootCertName')]",
                        "publicCertData": "[parameters('clientRootCertData')]"
                    }
                ],
                "vpnClientRevokedCertificates": [],
                "radiusServers": [],
                "radiusServerRootCertificates": [],
                "radiusClientRootCertificates": [],
                "vpnClientIpsecPolicies": []
            }
        },
        {
            "type": "Microsoft.Network/virtualHubs/hubRouteTables",
            "apiVersion": "2020-05-01",
            "name": "[concat(parameters('vWanHubName'), '/defaultRouteTable')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualHubs', parameters('vWanHubName'))]"
            ],
            "properties": {
                "routes": [
                    {
                        "name": "spoke3route",
                        "destinationType": "CIDR",
                           "destinations": [
                               "192.168.251.0/24"
                            ],
                        "nextHopType": "ResourceId",
                        "nextHop": "[resourceId('Microsoft.Network/virtualHubs/hubVirtualNetworkConnections', parameters('vWanHubName'), 'vhub-to-spoke3')]"
                    },
                    {
                        "name": "spoke4route",
                        "destinationType": "CIDR",
                           "destinations": [
                               "192.168.252.0/24"
                            ],
                        "nextHopType": "ResourceId",
                        "nextHop": "[resourceId('Microsoft.Network/virtualHubs/hubVirtualNetworkConnections', parameters('vWanHubName'), 'vhub-to-spoke4')]"
                    }
                ],
                "labels": [
                    "default"
                ]
            }
        },
        {
            "type": "Microsoft.Network/virtualHubs/hubRouteTables",
            "apiVersion": "2020-05-01",
            "name": "[concat(parameters('vWanHubName'), '/noneRouteTable')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualHubs', parameters('vWanHubName'))]"
            ],
            "properties": {
                "routes": [],
                "labels": [
                    "none"
                ]
            }
        },
        {
            "type": "Microsoft.Network/p2sVpnGateways",
            "apiVersion": "2020-05-01",
            "name": "[parameters('vwanP2SVpnGatewayName')]",
            "location": "uksouth",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualHubs', parameters('vWanHubName'))]",
                "[resourceId('Microsoft.Network/vpnServerConfigurations', 'vwan-p2s-vpn-config')]",
                "[resourceId('Microsoft.Network/virtualHubs/hubRouteTables', parameters('vWanHubName'), 'defaultRouteTable')]"
            ],
            "properties": {
                "virtualHub": {
                    "id": "[resourceId('Microsoft.Network/virtualHubs', parameters('vWanHubName'))]"
                },
                "vpnServerConfiguration": {
                    "id": "[resourceId('Microsoft.Network/vpnServerConfigurations', 'vwan-p2s-vpn-config')]"
                },
                "p2SConnectionConfigurations": [
                    {
                        "name": "P2SConnectionConfigDefault",
                        "properties": {
                            "routingConfiguration": {
                                "associatedRouteTable": {
                                    "id": "[resourceId('Microsoft.Network/virtualHubs/hubRouteTables', parameters('vWanHubName'), 'defaultRouteTable')]"
                                },
                                "propagatedRouteTables": {
                                    "labels": [
                                        "default"
                                    ],
                                    "ids": [
                                        {
                                            "id": "[resourceId('Microsoft.Network/virtualHubs/hubRouteTables', parameters('vWanHubName'), 'defaultRouteTable')]"
                                        }
                                    ]
                                },
                                "vnetRoutes": {
                                    "staticRoutes": []
                                }
                            },
                            "vpnClientAddressPool": {
                                "addressPrefixes": [
                                    "10.10.8.0/24"
                                ]
                            }
                        }
                    }
                ],
                "vpnGatewayScaleUnit": 1,
                "customDnsServers": []
            }
        },
        {
            
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2019-08-01",
            "name": "spoke-vnet3-subnet-nsg",
            "location": "[resourceGroup().location]",
            "properties": {
                "securityRules": [
                {
                    "name": "default-allow-3389",
                    "properties": {
                    "priority": 1000,
                    "access": "Allow",
                    "direction": "Inbound",
                    "destinationPortRange": "3389",
                    "protocol": "Tcp",
                    "sourceAddressPrefix": "*",
                    "sourcePortRange": "*",
                    "destinationAddressPrefix": "*"
                    }
                }
                ]
            }
        },
        {
            "apiVersion": "2020-05-01",
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[parameters('spoke3VnetName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
               "[resourceId('Microsoft.Network/networkSecurityGroups', 'spoke-vnet3-subnet-nsg')]"
            ],
            "properties": {
            "addressSpace": {
                "addressPrefixes": [
                "[parameters('spoke3VnetAddressPrefix')]"
                ]
            },
            "subnets": [
                {
                    "name": "default",
                    "properties": {
                        "addressPrefix": "[parameters('spoke3SubnetAddressPrefix')]",
                        "networkSecurityGroup": {
                            "id": "[resourceId('Microsoft.Network/networkSecurityGroups', 'spoke-vnet3-subnet-nsg')]"
                        }
                    }   
                }
                ]
            }
        },
        {
            "apiVersion": "2015-06-15",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[parameters('vm1-spoke3-nic')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', parameters('spoke3VnetName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('Spoke3VM1SubnetRef')]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2017-03-30",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[parameters('spoke3Vm1Name')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Storage/storageAccounts/', parameters('storageAccountName'))]",
                "[concat('Microsoft.Network/networkInterfaces/', parameters('vm1-spoke3-nic'))]"
            ],
            "properties": {
                "hardwareProfile": {
                "vmSize": "Standard_A2_v2"
                },
            "osProfile": {
                "computerName": "[parameters('spoke3Vm1Name')]",
                "adminUsername": "spoke3vm1-uid",
                "adminPassword": "<???>"
            },
            "storageProfile": {
                "imageReference": {
                    "publisher": "MicrosoftWindowsServer",
                    "offer": "WindowsServer",
                    "sku": "2012-R2-Datacenter",
                    "version": "latest"
                },
                "osDisk": {
                    "name": "[concat(parameters('spoke3Vm1Name'),'_OSDisk')]", 
                    "caching": "ReadWrite",
                    "createOption": "FromImage"
                    }
            },
            "networkProfile": {
                "networkInterfaces": [
                        {
                        "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('vm1-spoke3-nic'))]"
                        }
                    ]
                }
            }
        },
        {
            
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2019-08-01",
            "name": "spoke-vnet4-subnet-nsg",
            "location": "[resourceGroup().location]",
            "properties": {
                "securityRules": [
                {
                    "name": "default-allow-3389",
                    "properties": {
                    "priority": 1000,
                    "access": "Allow",
                    "direction": "Inbound",
                    "destinationPortRange": "3389",
                    "protocol": "Tcp",
                    "sourceAddressPrefix": "*",
                    "sourcePortRange": "*",
                    "destinationAddressPrefix": "*"
                    }
                }
                ]
            }
        },
        {
            "apiVersion": "2020-05-01",
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[parameters('spoke4VnetName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
               "[resourceId('Microsoft.Network/networkSecurityGroups', 'spoke-vnet4-subnet-nsg')]"
            ],
            "properties": {
            "addressSpace": {
                "addressPrefixes": [
                "[parameters('spoke4VnetAddressPrefix')]"
                ]
            },
            "subnets": [
                {
                    "name": "default",
                    "properties": {
                        "addressPrefix": "[parameters('spoke4SubnetAddressPrefix')]",
                        "networkSecurityGroup": {
                            "id": "[resourceId('Microsoft.Network/networkSecurityGroups', 'spoke-vnet4-subnet-nsg')]"
                        }
                    }   
                }
                ]
            }
        },
        {
            "apiVersion": "2015-06-15",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[parameters('vm1-spoke4-nic')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', parameters('spoke4VnetName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('Spoke4VM1SubnetRef')]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2017-03-30",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[parameters('spoke4Vm1Name')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Storage/storageAccounts/', parameters('storageAccountName'))]",
                "[concat('Microsoft.Network/networkInterfaces/', parameters('vm1-spoke4-nic'))]"
            ],
            "properties": {
                "hardwareProfile": {
                "vmSize": "Standard_A2_v2"
                },
            "osProfile": {
                "computerName": "[parameters('spoke4Vm1Name')]",
                "adminUsername": "spoke4vm1-uid",
                "adminPassword": "<???>"
            },
            "storageProfile": {
                "imageReference": {
                    "publisher": "MicrosoftWindowsServer",
                    "offer": "WindowsServer",
                    "sku": "2012-R2-Datacenter",
                    "version": "latest"
                },
                "osDisk": {
                    "name": "[concat(parameters('spoke4Vm1Name'),'_OSDisk')]", 
                    "caching": "ReadWrite",
                    "createOption": "FromImage"
                    }
            },
            "networkProfile": {
                "networkInterfaces": [
                        {
                        "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('vm1-spoke4-nic'))]"
                        }
                    ]
                }
            }
        }
    ],
    "outputs": {
        "networkInterface": {
            "type": "string",
            "value": "[reference(concat(parameters('vm1-spoke1-nic'))).ipConfigurations[0].properties.privateIPAddress]"
        }
    }
}